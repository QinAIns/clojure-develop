SSL_connect(3)                      OpenSSL                     SSL_connect(3)



NNAAMMEE
       SSL_connect - initiate the TLS/SSL handshake with an TLS/SSL server

SSYYNNOOPPSSIISS
        #include <openssl/ssl.h>

        int SSL_connect(SSL *ssl);

DDEESSCCRRIIPPTTIIOONN
       _S_S_L___c_o_n_n_e_c_t_(_) initiates the TLS/SSL handshake with a server. The commu-
       nication channel must already have been set and assigned to the ssssll by
       setting an underlying BBIIOO.

NNOOTTEESS
       The behaviour of _S_S_L___c_o_n_n_e_c_t_(_) depends on the underlying BIO.

       If the underlying BIO is bblloocckkiinngg, _S_S_L___c_o_n_n_e_c_t_(_) will only return once
       the handshake has been finished or an error occurred.

       If the underlying BIO is nnoonn--bblloocckkiinngg, _S_S_L___c_o_n_n_e_c_t_(_) will also return
       when the underlying BIO could not satisfy the needs of _S_S_L___c_o_n_n_e_c_t_(_) to
       continue the handshake, indicating the problem by the return value -1.
       In this case a call to _S_S_L___g_e_t___e_r_r_o_r_(_) with the return value of
       _S_S_L___c_o_n_n_e_c_t_(_) will yield SSSSLL__EERRRROORR__WWAANNTT__RREEAADD or SSSSLL__EERRRROORR__WWAANNTT__WWRRIITTEE.
       The calling process then must repeat the call after taking appropriate
       action to satisfy the needs of _S_S_L___c_o_n_n_e_c_t_(_).  The action depends on
       the underlying BIO. When using a non-blocking socket, nothing is to be
       done, but _s_e_l_e_c_t_(_) can be used to check for the required condition.
       When using a buffering BIO, like a BIO pair, data must be written into
       or retrieved out of the BIO before being able to continue.

RREETTUURRNN VVAALLUUEESS
       The following return values can occur:

       1   The TLS/SSL handshake was successfully completed, a TLS/SSL connec-
           tion has been established.

       0   The TLS/SSL handshake was not successful but was shut down con-
           trolled and by the specifications of the TLS/SSL protocol. Call
           _S_S_L___g_e_t___e_r_r_o_r_(_) with the return value rreett to find out the reason.

       <0  The TLS/SSL handshake was not successful, because a fatal error
           occurred either at the protocol level or a connection failure
           occurred. The shutdown was not clean. It can also occur of action
           is need to continue the operation for non-blocking BIOs. Call
           _S_S_L___g_e_t___e_r_r_o_r_(_) with the return value rreett to find out the reason.

SSEEEE AALLSSOO
       _S_S_L___g_e_t___e_r_r_o_r(3), _S_S_L___a_c_c_e_p_t(3), _S_S_L___s_h_u_t_d_o_w_n(3), _s_s_l(3), _b_i_o(3),
       _S_S_L___s_e_t___c_o_n_n_e_c_t___s_t_a_t_e(3), _S_S_L___d_o___h_a_n_d_s_h_a_k_e(3), _S_S_L___C_T_X___n_e_w(3)



1.0.0g                            2003-06-03                    SSL_connect(3)
