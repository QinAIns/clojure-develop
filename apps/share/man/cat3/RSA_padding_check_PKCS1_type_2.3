RSA_padding_add_PKCS1_type_1(3)     OpenSSL    RSA_padding_add_PKCS1_type_1(3)



NNAAMMEE
       RSA_padding_add_PKCS1_type_1, RSA_padding_check_PKCS1_type_1, RSA_pad-
       ding_add_PKCS1_type_2, RSA_padding_check_PKCS1_type_2, RSA_pad-
       ding_add_PKCS1_OAEP, RSA_padding_check_PKCS1_OAEP, RSA_pad-
       ding_add_SSLv23, RSA_padding_check_SSLv23, RSA_padding_add_none,
       RSA_padding_check_none - asymmetric encryption padding

SSYYNNOOPPSSIISS
        #include <openssl/rsa.h>

        int RSA_padding_add_PKCS1_type_1(unsigned char *to, int tlen,
           unsigned char *f, int fl);

        int RSA_padding_check_PKCS1_type_1(unsigned char *to, int tlen,
           unsigned char *f, int fl, int rsa_len);

        int RSA_padding_add_PKCS1_type_2(unsigned char *to, int tlen,
           unsigned char *f, int fl);

        int RSA_padding_check_PKCS1_type_2(unsigned char *to, int tlen,
           unsigned char *f, int fl, int rsa_len);

        int RSA_padding_add_PKCS1_OAEP(unsigned char *to, int tlen,
           unsigned char *f, int fl, unsigned char *p, int pl);

        int RSA_padding_check_PKCS1_OAEP(unsigned char *to, int tlen,
           unsigned char *f, int fl, int rsa_len, unsigned char *p, int pl);

        int RSA_padding_add_SSLv23(unsigned char *to, int tlen,
           unsigned char *f, int fl);

        int RSA_padding_check_SSLv23(unsigned char *to, int tlen,
           unsigned char *f, int fl, int rsa_len);

        int RSA_padding_add_none(unsigned char *to, int tlen,
           unsigned char *f, int fl);

        int RSA_padding_check_none(unsigned char *to, int tlen,
           unsigned char *f, int fl, int rsa_len);

DDEESSCCRRIIPPTTIIOONN
       The _R_S_A___p_a_d_d_i_n_g___x_x_x___x_x_x_(_) functions are called from the RSA encrypt,
       decrypt, sign and verify functions. Normally they should not be called
       from application programs.

       However, they can also be called directly to implement padding for
       other asymmetric ciphers. _R_S_A___p_a_d_d_i_n_g___a_d_d___P_K_C_S_1___O_A_E_P_(_) and _R_S_A___p_a_d_-
       _d_i_n_g___c_h_e_c_k___P_K_C_S_1___O_A_E_P_(_) may be used in an application combined with
       RRSSAA__NNOO__PPAADDDDIINNGG in order to implement OAEP with an encoding parameter.

       _R_S_A___p_a_d_d_i_n_g___a_d_d___x_x_x_(_) encodes ffll bytes from ff so as to fit into ttlleenn
       bytes and stores the result at ttoo. An error occurs if ffll does not meet
       the size requirements of the encoding method.

       The following encoding methods are implemented:

       PKCS1_type_1
           PKCS #1 v2.0 EMSA-PKCS1-v1_5 (PKCS #1 v1.5 block type 1); used for
           signatures

       PKCS1_type_2
           PKCS #1 v2.0 EME-PKCS1-v1_5 (PKCS #1 v1.5 block type 2)

       PKCS1_OAEP
           PKCS #1 v2.0 EME-OAEP

       SSLv23
           PKCS #1 EME-PKCS1-v1_5 with SSL-specific modification

       none
           simply copy the data

       The random number generator must be seeded prior to calling _R_S_A___p_a_d_-
       _d_i_n_g___a_d_d___x_x_x_(_).

       _R_S_A___p_a_d_d_i_n_g___c_h_e_c_k___x_x_x_(_) verifies that the ffll bytes at ff contain a valid
       encoding for a rrssaa__lleenn byte RSA key in the respective encoding method
       and stores the recovered data of at most ttlleenn bytes (for RRSSAA__NNOO__PPAADD--
       DDIINNGG: of size ttlleenn) at ttoo.

       For _R_S_A___p_a_d_d_i_n_g___x_x_x___O_A_E_P_(_), pp points to the encoding parameter of
       length ppll. pp may be NNUULLLL if ppll is 0.

RREETTUURRNN VVAALLUUEESS
       The _R_S_A___p_a_d_d_i_n_g___a_d_d___x_x_x_(_) functions return 1 on success, 0 on error.
       The _R_S_A___p_a_d_d_i_n_g___c_h_e_c_k___x_x_x_(_) functions return the length of the recov-
       ered data, -1 on error. Error codes can be obtained by calling
       _E_R_R___g_e_t___e_r_r_o_r(3).

SSEEEE AALLSSOO
       _R_S_A___p_u_b_l_i_c___e_n_c_r_y_p_t(3), _R_S_A___p_r_i_v_a_t_e___d_e_c_r_y_p_t(3), _R_S_A___s_i_g_n(3), _R_S_A___v_e_r_-
       _i_f_y(3)

HHIISSTTOORRYY
       _R_S_A___p_a_d_d_i_n_g___a_d_d___P_K_C_S_1___t_y_p_e___1_(_), _R_S_A___p_a_d_d_i_n_g___c_h_e_c_k___P_K_C_S_1___t_y_p_e___1_(_),
       _R_S_A___p_a_d_d_i_n_g___a_d_d___P_K_C_S_1___t_y_p_e___2_(_), _R_S_A___p_a_d_d_i_n_g___c_h_e_c_k___P_K_C_S_1___t_y_p_e___2_(_),
       _R_S_A___p_a_d_d_i_n_g___a_d_d___S_S_L_v_2_3_(_), _R_S_A___p_a_d_d_i_n_g___c_h_e_c_k___S_S_L_v_2_3_(_), _R_S_A___p_a_d_-
       _d_i_n_g___a_d_d___n_o_n_e_(_) and _R_S_A___p_a_d_d_i_n_g___c_h_e_c_k___n_o_n_e_(_) appeared in SSLeay 0.9.0.

       _R_S_A___p_a_d_d_i_n_g___a_d_d___P_K_C_S_1___O_A_E_P_(_) and _R_S_A___p_a_d_d_i_n_g___c_h_e_c_k___P_K_C_S_1___O_A_E_P_(_) were
       added in OpenSSL 0.9.2b.



1.0.0g                            2000-02-24   RSA_padding_add_PKCS1_type_1(3)
