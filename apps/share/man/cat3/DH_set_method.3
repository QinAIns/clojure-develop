DH_set_method(3)                    OpenSSL                   DH_set_method(3)



NNAAMMEE
       DH_set_default_method, DH_get_default_method, DH_set_method,
       DH_new_method, DH_OpenSSL - select DH method

SSYYNNOOPPSSIISS
        #include <openssl/dh.h>
        #include <openssl/engine.h>

        void DH_set_default_method(const DH_METHOD *meth);

        const DH_METHOD *DH_get_default_method(void);

        int DH_set_method(DH *dh, const DH_METHOD *meth);

        DH *DH_new_method(ENGINE *engine);

        const DH_METHOD *DH_OpenSSL(void);

DDEESSCCRRIIPPTTIIOONN
       A DDHH__MMEETTHHOODD specifies the functions that OpenSSL uses for Diffie-Hell-
       man operations. By modifying the method, alternative implementations
       such as hardware accelerators may be used. IMPORTANT: See the NOTES
       section for important information about how these DH API functions are
       affected by the use of EENNGGIINNEE API calls.

       Initially, the default DH_METHOD is the OpenSSL internal implementa-
       tion, as returned by _D_H___O_p_e_n_S_S_L_(_).

       _D_H___s_e_t___d_e_f_a_u_l_t___m_e_t_h_o_d_(_) makes mmeetthh the default method for all DH struc-
       tures created later. NNBB: This is true only whilst no ENGINE has been
       set as a default for DH, so this function is no longer recommended.

       _D_H___g_e_t___d_e_f_a_u_l_t___m_e_t_h_o_d_(_) returns a pointer to the current default
       DH_METHOD.  However, the meaningfulness of this result is dependent on
       whether the ENGINE API is being used, so this function is no longer
       recommended.

       _D_H___s_e_t___m_e_t_h_o_d_(_) selects mmeetthh to perform all operations using the key
       ddhh.  This will replace the DH_METHOD used by the DH key and if the pre-
       vious method was supplied by an ENGINE, the handle to that ENGINE will
       be released during the change. It is possible to have DH keys that only
       work with certain DH_METHOD implementations (eg. from an ENGINE module
       that supports embedded hardware-protected keys), and in such cases
       attempting to change the DH_METHOD for the key can have unexpected
       results.

       _D_H___n_e_w___m_e_t_h_o_d_(_) allocates and initializes a DH structure so that eennggiinnee
       will be used for the DH operations. If eennggiinnee is NULL, the default
       ENGINE for DH operations is used, and if no default ENGINE is set, the
       DH_METHOD controlled by _D_H___s_e_t___d_e_f_a_u_l_t___m_e_t_h_o_d_(_) is used.

TTHHEE DDHH__MMEETTHHOODD SSTTRRUUCCTTUURREE
        typedef struct dh_meth_st
        {
            /* name of the implementation */
               const char *name;

            /* generate private and public DH values for key agreement */
               int (*generate_key)(DH *dh);

            /* compute shared secret */
               int (*compute_key)(unsigned char *key, BIGNUM *pub_key, DH *dh);

            /* compute r = a ^ p mod m (May be NULL for some implementations) */
               int (*bn_mod_exp)(DH *dh, BIGNUM *r, BIGNUM *a, const BIGNUM *p,
                                       const BIGNUM *m, BN_CTX *ctx,
                                       BN_MONT_CTX *m_ctx);

            /* called at DH_new */
               int (*init)(DH *dh);

            /* called at DH_free */
               int (*finish)(DH *dh);

               int flags;

               char *app_data; /* ?? */

        } DH_METHOD;

RREETTUURRNN VVAALLUUEESS
       _D_H___O_p_e_n_S_S_L_(_) and _D_H___g_e_t___d_e_f_a_u_l_t___m_e_t_h_o_d_(_) return pointers to the respec-
       tive DDHH__MMEETTHHOODDs.

       _D_H___s_e_t___d_e_f_a_u_l_t___m_e_t_h_o_d_(_) returns no value.

       _D_H___s_e_t___m_e_t_h_o_d_(_) returns non-zero if the provided mmeetthh was successfully
       set as the method for ddhh (including unloading the ENGINE handle if the
       previous method was supplied by an ENGINE).

       _D_H___n_e_w___m_e_t_h_o_d_(_) returns NULL and sets an error code that can be
       obtained by _E_R_R___g_e_t___e_r_r_o_r(3) if the allocation fails. Otherwise it
       returns a pointer to the newly allocated structure.

NNOOTTEESS
       As of version 0.9.7, DH_METHOD implementations are grouped together
       with other algorithmic APIs (eg. RSA_METHOD, EVP_CIPHER, etc) in EENNGGIINNEE
       modules. If a default ENGINE is specified for DH functionality using an
       ENGINE API function, that will override any DH defaults set using the
       DH API (ie.  _D_H___s_e_t___d_e_f_a_u_l_t___m_e_t_h_o_d_(_)). For this reason, the ENGINE API
       is the recommended way to control default implementations for use in DH
       and other cryptographic algorithms.

SSEEEE AALLSSOO
       _d_h(3), _D_H___n_e_w(3)

HHIISSTTOORRYY
       _D_H___s_e_t___d_e_f_a_u_l_t___m_e_t_h_o_d_(_), _D_H___g_e_t___d_e_f_a_u_l_t___m_e_t_h_o_d_(_), _D_H___s_e_t___m_e_t_h_o_d_(_),
       _D_H___n_e_w___m_e_t_h_o_d_(_) and _D_H___O_p_e_n_S_S_L_(_) were added in OpenSSL 0.9.4.

       _D_H___s_e_t___d_e_f_a_u_l_t___o_p_e_n_s_s_l___m_e_t_h_o_d_(_) and _D_H___g_e_t___d_e_f_a_u_l_t___o_p_e_n_s_s_l___m_e_t_h_o_d_(_)
       replaced _D_H___s_e_t___d_e_f_a_u_l_t___m_e_t_h_o_d_(_) and _D_H___g_e_t___d_e_f_a_u_l_t___m_e_t_h_o_d_(_) respec-
       tively, and _D_H___s_e_t___m_e_t_h_o_d_(_) and _D_H___n_e_w___m_e_t_h_o_d_(_) were altered to use
       EENNGGIINNEEs rather than DDHH__MMEETTHHOODDs during development of the engine version
       of OpenSSL 0.9.6. For 0.9.7, the handling of defaults in the ENGINE API
       was restructured so that this change was reversed, and behaviour of the
       other functions resembled more closely the previous behaviour. The be-
       haviour of defaults in the ENGINE API now transparently overrides the
       behaviour of defaults in the DH API without requiring changing these
       function prototypes.



1.0.0g                            2007-11-19                  DH_set_method(3)
