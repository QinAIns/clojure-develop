BIO_f_cipher(3)                     OpenSSL                    BIO_f_cipher(3)



NNAAMMEE
       BIO_f_cipher, BIO_set_cipher, BIO_get_cipher_status, BIO_get_cipher_ctx
       - cipher BIO filter

SSYYNNOOPPSSIISS
        #include <openssl/bio.h>
        #include <openssl/evp.h>

        BIO_METHOD *   BIO_f_cipher(void);
        void BIO_set_cipher(BIO *b,const EVP_CIPHER *cipher,
                       unsigned char *key, unsigned char *iv, int enc);
        int BIO_get_cipher_status(BIO *b)
        int BIO_get_cipher_ctx(BIO *b, EVP_CIPHER_CTX **pctx)

DDEESSCCRRIIPPTTIIOONN
       _B_I_O___f___c_i_p_h_e_r_(_) returns the cipher BIO method. This is a filter BIO that
       encrypts any data written through it, and decrypts any data read from
       it. It is a BIO wrapper for the cipher routines _E_V_P___C_i_p_h_e_r_I_n_i_t_(_),
       _E_V_P___C_i_p_h_e_r_U_p_d_a_t_e_(_) and _E_V_P___C_i_p_h_e_r_F_i_n_a_l_(_).

       Cipher BIOs do not support _B_I_O___g_e_t_s_(_) or _B_I_O___p_u_t_s_(_).

       _B_I_O___f_l_u_s_h_(_) on an encryption BIO that is being written through is used
       to signal that no more data is to be encrypted: this is used to flush
       and possibly pad the final block through the BIO.

       _B_I_O___s_e_t___c_i_p_h_e_r_(_) sets the cipher of BIO bb to cciipphheerr using key kkeeyy and
       IV iivv. eenncc should be set to 1 for encryption and zero for decryption.

       When reading from an encryption BIO the final block is automatically
       decrypted and checked when EOF is detected. _B_I_O___g_e_t___c_i_p_h_e_r___s_t_a_t_u_s_(_) is
       a _B_I_O___c_t_r_l_(_) macro which can be called to determine whether the decryp-
       tion operation was successful.

       _B_I_O___g_e_t___c_i_p_h_e_r___c_t_x_(_) is a _B_I_O___c_t_r_l_(_) macro which retrieves the internal
       BIO cipher context. The retrieved context can be used in conjunction
       with the standard cipher routines to set it up. This is useful when
       _B_I_O___s_e_t___c_i_p_h_e_r_(_) is not flexible enough for the applications needs.

NNOOTTEESS
       When encrypting _B_I_O___f_l_u_s_h_(_) mmuusstt be called to flush the final block
       through the BIO. If it is not then the final block will fail a subse-
       quent decrypt.

       When decrypting an error on the final block is signalled by a zero
       return value from the read operation. A successful decrypt followed by
       EOF will also return zero for the final read. _B_I_O___g_e_t___c_i_p_h_e_r___s_t_a_t_u_s_(_)
       should be called to determine if the decrypt was successful.

       As always, if _B_I_O___g_e_t_s_(_) or _B_I_O___p_u_t_s_(_) support is needed then it can be
       achieved by preceding the cipher BIO with a buffering BIO.

RREETTUURRNN VVAALLUUEESS
       _B_I_O___f___c_i_p_h_e_r_(_) returns the cipher BIO method.

       _B_I_O___s_e_t___c_i_p_h_e_r_(_) does not return a value.

       _B_I_O___g_e_t___c_i_p_h_e_r___s_t_a_t_u_s_(_) returns 1 for a successful decrypt and 0 for
       failure.

       _B_I_O___g_e_t___c_i_p_h_e_r___c_t_x_(_) currently always returns 1.

EEXXAAMMPPLLEESS
       TBA

SSEEEE AALLSSOO
       TBA



1.0.0g                            2003-02-27                   BIO_f_cipher(3)
