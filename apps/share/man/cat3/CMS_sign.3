CMS_sign(3)                         OpenSSL                        CMS_sign(3)



NNAAMMEE
        CMS_sign - create a CMS SignedData structure

SSYYNNOOPPSSIISS
        #include <openssl/cms.h>

        CMS_ContentInfo *CMS_sign(X509 *signcert, EVP_PKEY *pkey, STACK_OF(X509) *certs, BIO *data, unsigned int flags);

DDEESSCCRRIIPPTTIIOONN
       _C_M_S___s_i_g_n_(_) creates and returns a CMS SignedData structure. ssiiggnncceerrtt is
       the certificate to sign with, ppkkeeyy is the corresponding private key.
       cceerrttss is an optional additional set of certificates to include in the
       CMS structure (for example any intermediate CAs in the chain). Any or
       all of these parameters can be NNUULLLL, see NNOOTTEESS below.

       The data to be signed is read from BIO ddaattaa.

       ffllaaggss is an optional set of flags.

NNOOTTEESS
       Any of the following flags (ored together) can be passed in the ffllaaggss
       parameter.

       Many S/MIME clients expect the signed content to include valid MIME
       headers. If the CCMMSS__TTEEXXTT flag is set MIME headers for type tteexxtt//ppllaaiinn
       are prepended to the data.

       If CCMMSS__NNOOCCEERRTTSS is set the signer's certificate will not be included in
       the CMS_ContentInfo structure, the signer's certificate must still be
       supplied in the ssiiggnncceerrtt parameter though. This can reduce the size of
       the signature if the signers certificate can be obtained by other
       means: for example a previously signed message.

       The data being signed is included in the CMS_ContentInfo structure,
       unless CCMMSS__DDEETTAACCHHEEDD is set in which case it is omitted. This is used
       for CMS_ContentInfo detached signatures which are used in S/MIME plain-
       text signed messages for example.

       Normally the supplied content is translated into MIME canonical format
       (as required by the S/MIME specifications) if CCMMSS__BBIINNAARRYY is set no
       translation occurs. This option should be used if the supplied data is
       in binary format otherwise the translation will corrupt it.

       The SignedData structure includes several CMS signedAttributes includ-
       ing the signing time, the CMS content type and the supported list of
       ciphers in an SMIMECapabilities attribute. If CCMMSS__NNOOAATTTTRR is set then no
       signedAttributes will be used. If CCMMSS__NNOOSSMMIIMMEECCAAPP is set then just the
       SMIMECapabilities are omitted.

       If present the SMIMECapabilities attribute indicates support for the
       following algorithms in preference order: 256 bit AES, Gost R3411-94,
       Gost 28147-89, 192 bit AES, 128 bit AES, triple DES, 128 bit RC2, 64
       bit RC2, DES and 40 bit RC2.  If any of these algorithms is not avail-
       able then it will not be included: for example the GOST algorithms will
       not be included if the GOST ENGINE is not loaded.

       OpenSSL will by default identify signing certificates using issuer name
       and serial number. If CCMMSS__UUSSEE__KKEEYYIIDD is set it will use the subject key
       identifier value instead. An error occurs if the signing certificate
       does not have a subject key identifier extension.

       If the flags CCMMSS__SSTTRREEAAMM is set then the returned CCMMSS__CCoonntteennttIInnffoo struc-
       ture is just initialized ready to perform the signing operation. The
       signing is however nnoott performed and the data to be signed is not read
       from the ddaattaa parameter. Signing is deferred until after the data has
       been written. In this way data can be signed in a single pass.

       If the CCMMSS__PPAARRTTIIAALL flag is set a partial CCMMSS__CCoonntteennttIInnffoo structure is
       output to which additional signers and capabilities can be added before
       finalization.

       If the flag CCMMSS__SSTTRREEAAMM is set the returned CCMMSS__CCoonntteennttIInnffoo structure is
       nnoott complete and outputting its contents via a function that does not
       properly finalize the CCMMSS__CCoonntteennttIInnffoo structure will give unpredictable
       results.

       Several functions including _S_M_I_M_E___w_r_i_t_e___C_M_S_(_), _i_2_d___C_M_S___b_i_o___s_t_r_e_a_m_(_),
       _P_E_M___w_r_i_t_e___b_i_o___C_M_S___s_t_r_e_a_m_(_) finalize the structure. Alternatively final-
       ization can be performed by obtaining the streaming ASN1 BBIIOO directly
       using _B_I_O___n_e_w___C_M_S_(_).

       If a signer is specified it will use the default digest for the signing
       algorithm. This is SSHHAA11 for both RSA and DSA keys.

       If ssiiggnncceerrtt and ppkkeeyy are NULL then a certificates only CMS structure is
       output.

       The function _C_M_S___s_i_g_n_(_) is a basic CMS signing function whose output
       will be suitable for many purposes. For finer control of the output
       format the cceerrttss, ssiiggnncceerrtt and ppkkeeyy parameters can all be NNUULLLL and the
       CCMMSS__PPAARRTTIIAALL flag set. Then one or more signers can be added using the
       function _C_M_S___s_i_g_n___a_d_d_1___s_i_g_n_e_r_(_), non default digests can be used and
       custom attributes added. _CC_MM_SS____ff_ii_nn_aa_ll_((_)) must then be called to finalize
       the structure if streaming is not enabled.

BBUUGGSS
       Some attributes such as counter signatures are not supported.

RREETTUURRNN VVAALLUUEESS
       _C_M_S___s_i_g_n_(_) returns either a valid CMS_ContentInfo structure or NULL if
       an error occurred. The error can be obtained from _E_R_R___g_e_t___e_r_r_o_r(3).

SSEEEE AALLSSOO
       _E_R_R___g_e_t___e_r_r_o_r(3), _C_M_S___v_e_r_i_f_y(3)

HHIISSTTOORRYY
       _C_M_S___s_i_g_n_(_) was added to OpenSSL 0.9.8

       The CCMMSS__SSTTRREEAAMM flag is only supported for detached data in OpenSSL
       0.9.8, it is supported for embedded data in OpenSSL 1.0.0 and later.



1.0.0g                            2009-10-01                       CMS_sign(3)
