SSL_clear(3)                        OpenSSL                       SSL_clear(3)



NNAAMMEE
       SSL_clear - reset SSL object to allow another connection

SSYYNNOOPPSSIISS
        #include <openssl/ssl.h>

        int SSL_clear(SSL *ssl);

DDEESSCCRRIIPPTTIIOONN
       Reset ssssll to allow another connection. All settings (method, ciphers,
       BIOs) are kept.

NNOOTTEESS
       SSL_clear is used to prepare an SSL object for a new connection. While
       all settings are kept, a side effect is the handling of the current SSL
       session.  If a session is still ooppeenn, it is considered bad and will be
       removed from the session cache, as required by RFC2246. A session is
       considered open, if _S_S_L___s_h_u_t_d_o_w_n(3) was not called for the connection
       or at least _S_S_L___s_e_t___s_h_u_t_d_o_w_n(3) was used to set the SSL_SENT_SHUTDOWN
       state.

       If a session was closed cleanly, the session object will be kept and
       all settings corresponding. This explicitly means, that e.g. the spe-
       cial method used during the session will be kept for the next hand-
       shake. So if the session was a TLSv1 session, a SSL client object will
       use a TLSv1 client method for the next handshake and a SSL server
       object will use a TLSv1 server method, even if SSLv23_*_methods were
       chosen on startup. This will might lead to connection failures (see
       _S_S_L___n_e_w(3)) for a description of the method's properties.

WWAARRNNIINNGGSS
       _S_S_L___c_l_e_a_r_(_) resets the SSL object to allow for another connection. The
       reset operation however keeps several settings of the last sessions
       (some of these settings were made automatically during the last hand-
       shake). It only makes sense for a new connection with the exact same
       peer that shares these settings, and may fail if that peer changes its
       settings between connections. Use the sequence _S_S_L___g_e_t___s_e_s_s_i_o_n(3);
       _S_S_L___n_e_w(3); _S_S_L___s_e_t___s_e_s_s_i_o_n(3); _S_S_L___f_r_e_e(3) instead to avoid such fail-
       ures (or simply _S_S_L___f_r_e_e(3); _S_S_L___n_e_w(3) if session reuse is not
       desired).

RREETTUURRNN VVAALLUUEESS
       The following return values can occur:

       0   The _S_S_L___c_l_e_a_r_(_) operation could not be performed. Check the error
           stack to find out the reason.

       1   The _S_S_L___c_l_e_a_r_(_) operation was successful.

       _S_S_L___n_e_w(3), _S_S_L___f_r_e_e(3), _S_S_L___s_h_u_t_d_o_w_n(3), _S_S_L___s_e_t___s_h_u_t_d_o_w_n(3),
       _S_S_L___C_T_X___s_e_t___o_p_t_i_o_n_s(3), _s_s_l(3), _S_S_L___C_T_X___s_e_t___c_l_i_e_n_t___c_e_r_t___c_b(3)



1.0.0g                            2011-10-13                      SSL_clear(3)
