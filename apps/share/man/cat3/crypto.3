crypto(3)                           OpenSSL                          crypto(3)



NNAAMMEE
       crypto - OpenSSL cryptographic library

SSYYNNOOPPSSIISS
DDEESSCCRRIIPPTTIIOONN
       The OpenSSL ccrryyppttoo library implements a wide range of cryptographic
       algorithms used in various Internet standards. The services provided by
       this library are used by the OpenSSL implementations of SSL, TLS and
       S/MIME, and they have also been used to implement SSH, OpenPGP, and
       other cryptographic standards.

OOVVEERRVVIIEEWW
       lliibbccrryyppttoo consists of a number of sub-libraries that implement the
       individual algorithms.

       The functionality includes symmetric encryption, public key cryptogra-
       phy and key agreement, certificate handling, cryptographic hash func-
       tions and a cryptographic pseudo-random number generator.

       SYMMETRIC CIPHERS
           _b_l_o_w_f_i_s_h(3), _c_a_s_t(3), _d_e_s(3), _i_d_e_a(3), _r_c_2(3), _r_c_4(3), _r_c_5(3)

       PUBLIC KEY CRYPTOGRAPHY AND KEY AGREEMENT
           _d_s_a(3), _d_h(3), _r_s_a(3)

       CERTIFICATES
           _x_5_0_9(3), _x_5_0_9_v_3(3)

       AUTHENTICATION CODES, HASH FUNCTIONS
           _h_m_a_c(3), _m_d_2(3), _m_d_4(3), _m_d_5(3), _m_d_c_2(3), _r_i_p_e_m_d(3), _s_h_a(3)

       AUXILIARY FUNCTIONS
           _e_r_r(3), _t_h_r_e_a_d_s(3), _r_a_n_d(3), _O_P_E_N_S_S_L___V_E_R_S_I_O_N___N_U_M_B_E_R(3)

       INPUT/OUTPUT, DATA ENCODING
           _a_s_n_1(3), _b_i_o(3), _e_v_p(3), _p_e_m(3), _p_k_c_s_7(3), _p_k_c_s_1_2(3)

       INTERNAL FUNCTIONS
           _b_n(3), _b_u_f_f_e_r(3), _l_h_a_s_h(3), _o_b_j_e_c_t_s(3), _s_t_a_c_k(3), _t_x_t___d_b(3)

NNOOTTEESS
       Some of the newer functions follow a naming convention using the num-
       bers 00 and 11. For example the functions:

        int X509_CRL_add0_revoked(X509_CRL *crl, X509_REVOKED *rev);
        int X509_add1_trust_object(X509 *x, ASN1_OBJECT *obj);

       The 00 version uses the supplied structure pointer directly in the par-
       ent and it will be freed up when the parent is freed.  In the above
       example ccrrll would be freed but rreevv would not.

       The 11 function uses a copy of the supplied structure pointer (or in
       some cases increases its link count) in the parent and so both (xx and
       oobbjj above) should be freed up.

SSEEEE AALLSSOO
       _o_p_e_n_s_s_l(1), _s_s_l(3)



1.0.0g                            2002-10-06                         crypto(3)
