CMS_add1_recipient_cert(3)          OpenSSL         CMS_add1_recipient_cert(3)



NNAAMMEE
        CMS_add1_recipient_cert, CMS_add0_recipient_key - add recipients to a CMS enveloped data structure

SSYYNNOOPPSSIISS
        #include <openssl/cms.h>

        CMS_RecipientInfo *CMS_add1_recipient_cert(CMS_ContentInfo *cms, X509 *recip, unsigned int flags);

        CMS_RecipientInfo *CMS_add0_recipient_key(CMS_ContentInfo *cms, int nid, unsigned char *key, size_t keylen, unsigned char *id, size_t idlen, ASN1_GENERALIZEDTIME *date, ASN1_OBJECT *otherTypeId, ASN1_TYPE *otherType);

DDEESSCCRRIIPPTTIIOONN
       _C_M_S___a_d_d_1___r_e_c_i_p_i_e_n_t___c_e_r_t_(_) adds recipient rreecciipp to CMS_ContentInfo
       enveloped data structure ccmmss as a KeyTransRecipientInfo structure.

       _C_M_S___a_d_d_0___r_e_c_i_p_i_e_n_t___k_e_y_(_) adds symmetric key kkeeyy of length kkeeyylleenn using
       wrapping algorithm nniidd, identifier iidd of length iiddlleenn and optional val-
       ues ddaattee, ootthheerrTTyyppeeIIdd and ootthheerrTTyyppee to CMS_ContentInfo enveloped data
       structure ccmmss as a KEKRecipientInfo structure.

       The CMS_ContentInfo structure should be obtained from an initial call
       to _C_M_S___e_n_c_r_y_p_t_(_) with the flag CCMMSS__PPAARRTTIIAALL set.

NNOOTTEESS
       The main purpose of this function is to provide finer control over a
       CMS enveloped data structure where the simpler _C_M_S___e_n_c_r_y_p_t_(_) function
       defaults are not appropriate. For example if one or more KEKRecipi-
       entInfo structures need to be added. New attributes can also be added
       using the returned CMS_RecipientInfo structure and the CMS attribute
       utility functions.

       OpenSSL will by default identify recipient certificates using issuer
       name and serial number. If CCMMSS__UUSSEE__KKEEYYIIDD is set it will use the subject
       key identifier value instead. An error occurs if all recipient certifi-
       cates do not have a subject key identifier extension.

       Currently only AES based key wrapping algorithms are supported for nniidd,
       specifically: NID_id_aes128_wrap, NID_id_aes192_wrap and
       NID_id_aes256_wrap.  If nniidd is set to NNIIDD__uunnddeeff then an AES wrap algo-
       rithm will be used consistent with kkeeyylleenn.

RREETTUURRNN VVAALLUUEESS
       _C_M_S___a_d_d_1___r_e_c_i_p_i_e_n_t___c_e_r_t_(_) and _C_M_S___a_d_d_0___r_e_c_i_p_i_e_n_t___k_e_y_(_) return an inter-
       nal pointer to the CMS_RecipientInfo structure just added or NULL if an
       error occurs.

SSEEEE AALLSSOO
       _E_R_R___g_e_t___e_r_r_o_r(3), _C_M_S___d_e_c_r_y_p_t(3), _C_M_S___f_i_n_a_l(3),

HHIISSTTOORRYY
       _C_M_S___a_d_d_1___r_e_c_i_p_i_e_n_t___c_e_r_t_(_) and _C_M_S___a_d_d_0___r_e_c_i_p_i_e_n_t___k_e_y_(_) were added to
       OpenSSL 0.9.8



1.0.0g                            2008-04-11        CMS_add1_recipient_cert(3)
