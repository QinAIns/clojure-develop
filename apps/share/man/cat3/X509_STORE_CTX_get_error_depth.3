X509_STORE_CTX_get_error(3)         OpenSSL        X509_STORE_CTX_get_error(3)



NNAAMMEE
       X509_STORE_CTX_get_error, X509_STORE_CTX_set_error,
       X509_STORE_CTX_get_error_depth, X509_STORE_CTX_get_current_cert,
       X509_STORE_CTX_get1_chain, X509_verify_cert_error_string - get or set
       certificate verification status information

SSYYNNOOPPSSIISS
        #include <openssl/x509.h>
        #include <openssl/x509_vfy.h>

        int    X509_STORE_CTX_get_error(X509_STORE_CTX *ctx);
        void   X509_STORE_CTX_set_error(X509_STORE_CTX *ctx,int s);
        int    X509_STORE_CTX_get_error_depth(X509_STORE_CTX *ctx);
        X509 * X509_STORE_CTX_get_current_cert(X509_STORE_CTX *ctx);

        STACK_OF(X509) *X509_STORE_CTX_get1_chain(X509_STORE_CTX *ctx);

        const char *X509_verify_cert_error_string(long n);

DDEESSCCRRIIPPTTIIOONN
       These functions are typically called after _X_5_0_9___v_e_r_i_f_y___c_e_r_t_(_) has indi-
       cated an error or in a verification callback to determine the nature of
       an error.

       _X_5_0_9___S_T_O_R_E___C_T_X___g_e_t___e_r_r_o_r_(_) returns the error code of ccttxx, see the EERRRROORR
       CCOODDEESS section for a full description of all error codes.

       _X_5_0_9___S_T_O_R_E___C_T_X___s_e_t___e_r_r_o_r_(_) sets the error code of ccttxx to ss. For example
       it might be used in a verification callback to set an error based on
       additional checks.

       _X_5_0_9___S_T_O_R_E___C_T_X___g_e_t___e_r_r_o_r___d_e_p_t_h_(_) returns the ddeepptthh of the error. This
       is a non-negative integer representing where in the certificate chain
       the error occurred. If it is zero it occured in the end entity certifi-
       cate, one if it is the certificate which signed the end entity certifi-
       cate and so on.

       _X_5_0_9___S_T_O_R_E___C_T_X___g_e_t___c_u_r_r_e_n_t___c_e_r_t_(_) returns the certificate in ccttxx which
       caused the error or NNUULLLL if no certificate is relevant.

       _X_5_0_9___S_T_O_R_E___C_T_X___g_e_t_1___c_h_a_i_n_(_) returns a complete validate chain if a pre-
       vious call to _X_5_0_9___v_e_r_i_f_y___c_e_r_t_(_) is successful. If the call to
       _X_5_0_9___v_e_r_i_f_y___c_e_r_t_(_) is nnoott successful the returned chain may be incom-
       plete or invalid. The returned chain persists after the ccttxx structure
       is freed, when it is no longer needed it should be free up using:

         sk_X509_pop_free(chain, X509_free);

       _X_5_0_9___v_e_r_i_f_y___c_e_r_t___e_r_r_o_r___s_t_r_i_n_g_(_) returns a human readable error string
       for verification error nn.

RREETTUURRNN VVAALLUUEESS
       _X_5_0_9___S_T_O_R_E___C_T_X___g_e_t___e_r_r_o_r_(_) returns XX550099__VV__OOKK or an error code.

       _X_5_0_9___S_T_O_R_E___C_T_X___g_e_t___e_r_r_o_r___d_e_p_t_h_(_) returns a non-negative error depth.

       _X_5_0_9___S_T_O_R_E___C_T_X___g_e_t___c_u_r_r_e_n_t___c_e_r_t_(_) returns the cerificate which caused
       the error or NNUULLLL if no certificate is relevant to the error.

       _X_5_0_9___v_e_r_i_f_y___c_e_r_t___e_r_r_o_r___s_t_r_i_n_g_(_) returns a human readable error string
       for verification error nn.

EERRRROORR CCOODDEESS
       A list of error codes and messages is shown below.  Some of the error
       codes are defined but currently never returned: these are described as
       "unused".

       XX550099__VV__OOKK:: ookk
           the operation was successful.

       XX550099__VV__EERRRR__UUNNAABBLLEE__TTOO__GGEETT__IISSSSUUEERR__CCEERRTT:: uunnaabbllee ttoo ggeett iissssuueerr cceerrttiiffiiccaattee
           the issuer certificate could not be found: this occurs if the
           issuer certificate of an untrusted certificate cannot be found.

       XX550099__VV__EERRRR__UUNNAABBLLEE__TTOO__GGEETT__CCRRLL:: uunnaabbllee ttoo ggeett cceerrttiiffiiccaattee CCRRLL
           the CRL of a certificate could not be found.

       XX550099__VV__EERRRR__UUNNAABBLLEE__TTOO__DDEECCRRYYPPTT__CCEERRTT__SSIIGGNNAATTUURREE:: uunnaabbllee ttoo ddeeccrryypptt cceerrttiiffii--
       ccaattee''ss ssiiggnnaattuurree
           the certificate signature could not be decrypted. This means that
           the actual signature value could not be determined rather than it
           not matching the expected value, this is only meaningful for RSA
           keys.

       XX550099__VV__EERRRR__UUNNAABBLLEE__TTOO__DDEECCRRYYPPTT__CCRRLL__SSIIGGNNAATTUURREE:: uunnaabbllee ttoo ddeeccrryypptt CCRRLL''ss
       ssiiggnnaattuurree
           the CRL signature could not be decrypted: this means that the
           actual signature value could not be determined rather than it not
           matching the expected value.  Unused.

       XX550099__VV__EERRRR__UUNNAABBLLEE__TTOO__DDEECCOODDEE__IISSSSUUEERR__PPUUBBLLIICC__KKEEYY:: uunnaabbllee ttoo ddeeccooddee iissssuueerr
       ppuubblliicc kkeeyy
           the public key in the certificate SubjectPublicKeyInfo could not be
           read.

       XX550099__VV__EERRRR__CCEERRTT__SSIIGGNNAATTUURREE__FFAAIILLUURREE:: cceerrttiiffiiccaattee ssiiggnnaattuurree ffaaiilluurree
           the signature of the certificate is invalid.

       XX550099__VV__EERRRR__CCRRLL__SSIIGGNNAATTUURREE__FFAAIILLUURREE:: CCRRLL ssiiggnnaattuurree ffaaiilluurree
           the signature of the certificate is invalid.

       XX550099__VV__EERRRR__CCEERRTT__NNOOTT__YYEETT__VVAALLIIDD:: cceerrttiiffiiccaattee iiss nnoott yyeett vvaalliidd
           the certificate is not yet valid: the notBefore date is after the
           current time.

       XX550099__VV__EERRRR__CCEERRTT__HHAASS__EEXXPPIIRREEDD:: cceerrttiiffiiccaattee hhaass eexxppiirreedd
           the certificate has expired: that is the notAfter date is before
           the current time.

       XX550099__VV__EERRRR__CCRRLL__NNOOTT__YYEETT__VVAALLIIDD:: CCRRLL iiss nnoott yyeett vvaalliidd
           the CRL is not yet valid.

       XX550099__VV__EERRRR__CCRRLL__HHAASS__EEXXPPIIRREEDD:: CCRRLL hhaass eexxppiirreedd
           the CRL has expired.

       XX550099__VV__EERRRR__EERRRROORR__IINN__CCEERRTT__NNOOTT__BBEEFFOORREE__FFIIEELLDD:: ffoorrmmaatt eerrrroorr iinn cceerrttiiffii--
       ccaattee''ss nnoottBBeeffoorree ffiieelldd
           the certificate notBefore field contains an invalid time.

       XX550099__VV__EERRRR__EERRRROORR__IINN__CCEERRTT__NNOOTT__AAFFTTEERR__FFIIEELLDD:: ffoorrmmaatt eerrrroorr iinn cceerrttiiffiiccaattee''ss
       nnoottAAfftteerr ffiieelldd
           the certificate notAfter field contains an invalid time.

       XX550099__VV__EERRRR__EERRRROORR__IINN__CCRRLL__LLAASSTT__UUPPDDAATTEE__FFIIEELLDD:: ffoorrmmaatt eerrrroorr iinn CCRRLL''ss llaass--
       ttUUppddaattee ffiieelldd
           the CRL lastUpdate field contains an invalid time.

       XX550099__VV__EERRRR__EERRRROORR__IINN__CCRRLL__NNEEXXTT__UUPPDDAATTEE__FFIIEELLDD:: ffoorrmmaatt eerrrroorr iinn CCRRLL''ss nneexx--
       ttUUppddaattee ffiieelldd
           the CRL nextUpdate field contains an invalid time.

       XX550099__VV__EERRRR__OOUUTT__OOFF__MMEEMM:: oouutt ooff mmeemmoorryy
           an error occurred trying to allocate memory. This should never hap-
           pen.

       XX550099__VV__EERRRR__DDEEPPTTHH__ZZEERROO__SSEELLFF__SSIIGGNNEEDD__CCEERRTT:: sseellff ssiiggnneedd cceerrttiiffiiccaattee
           the passed certificate is self signed and the same certificate can-
           not be found in the list of trusted certificates.

       XX550099__VV__EERRRR__SSEELLFF__SSIIGGNNEEDD__CCEERRTT__IINN__CCHHAAIINN:: sseellff ssiiggnneedd cceerrttiiffiiccaattee iinn cceerr--
       ttiiffiiccaattee cchhaaiinn
           the certificate chain could be built up using the untrusted cer-
           tificates but the root could not be found locally.

       XX550099__VV__EERRRR__UUNNAABBLLEE__TTOO__GGEETT__IISSSSUUEERR__CCEERRTT__LLOOCCAALLLLYY:: uunnaabbllee ttoo ggeett llooccaall
       iissssuueerr cceerrttiiffiiccaattee
           the issuer certificate of a locally looked up certificate could not
           be found.  This normally means the list of trusted certificates is
           not complete.

       XX550099__VV__EERRRR__UUNNAABBLLEE__TTOO__VVEERRIIFFYY__LLEEAAFF__SSIIGGNNAATTUURREE:: uunnaabbllee ttoo vveerriiffyy tthhee ffiirrsstt
       cceerrttiiffiiccaattee
           no signatures could be verified because the chain contains only one
           certificate and it is not self signed.

       XX550099__VV__EERRRR__CCEERRTT__CCHHAAIINN__TTOOOO__LLOONNGG:: cceerrttiiffiiccaattee cchhaaiinn ttoooo lloonngg
           the certificate chain length is greater than the supplied maximum
           depth. Unused.

       XX550099__VV__EERRRR__CCEERRTT__RREEVVOOKKEEDD:: cceerrttiiffiiccaattee rreevvookkeedd
           the certificate has been revoked.

       XX550099__VV__EERRRR__IINNVVAALLIIDD__CCAA:: iinnvvaalliidd CCAA cceerrttiiffiiccaattee
           a CA certificate is invalid. Either it is not a CA or its exten-
           sions are not consistent with the supplied purpose.

       XX550099__VV__EERRRR__PPAATTHH__LLEENNGGTTHH__EEXXCCEEEEDDEEDD:: ppaatthh lleennggtthh ccoonnssttrraaiinntt eexxcceeeeddeedd
           the basicConstraints pathlength parameter has been exceeded.

       XX550099__VV__EERRRR__IINNVVAALLIIDD__PPUURRPPOOSSEE:: uunnssuuppppoorrtteedd cceerrttiiffiiccaattee ppuurrppoossee
           the supplied certificate cannot be used for the specified purpose.

       XX550099__VV__EERRRR__CCEERRTT__UUNNTTRRUUSSTTEEDD:: cceerrttiiffiiccaattee nnoott ttrruusstteedd
           the root CA is not marked as trusted for the specified purpose.

       XX550099__VV__EERRRR__CCEERRTT__RREEJJEECCTTEEDD:: cceerrttiiffiiccaattee rreejjeecctteedd
           the root CA is marked to reject the specified purpose.

       XX550099__VV__EERRRR__SSUUBBJJEECCTT__IISSSSUUEERR__MMIISSMMAATTCCHH:: ssuubbjjeecctt iissssuueerr mmiissmmaattcchh
           the current candidate issuer certificate was rejected because its
           subject name did not match the issuer name of the current certifi-
           cate. This is only set if issuer check debugging is enabled it is
           used for status notification and is nnoott in itself an error.

       XX550099__VV__EERRRR__AAKKIIDD__SSKKIIDD__MMIISSMMAATTCCHH:: aauutthhoorriittyy aanndd ssuubbjjeecctt kkeeyy iiddeennttiiffiieerr
       mmiissmmaattcchh
           the current candidate issuer certificate was rejected because its
           subject key identifier was present and did not match the authority
           key identifier current certificate. This is only set if issuer
           check debugging is enabled it is used for status notification and
           is nnoott in itself an error.

       XX550099__VV__EERRRR__AAKKIIDD__IISSSSUUEERR__SSEERRIIAALL__MMIISSMMAATTCCHH:: aauutthhoorriittyy aanndd iissssuueerr sseerriiaall
       nnuummbbeerr mmiissmmaattcchh
           the current candidate issuer certificate was rejected because its
           issuer name and serial number was present and did not match the
           authority key identifier of the current certificate. This is only
           set if issuer check debugging is enabled it is used for status
           notification and is nnoott in itself an error.

       XX550099__VV__EERRRR__KKEEYYUUSSAAGGEE__NNOO__CCEERRTTSSIIGGNN::kkeeyy uussaaggee ddooeess nnoott iinncclluuddee cceerrttiiffiiccaattee
       ssiiggnniinngg
           the current candidate issuer certificate was rejected because its
           keyUsage extension does not permit certificate signing. This is
           only set if issuer check debugging is enabled it is used for status
           notification and is nnoott in itself an error.

       XX550099__VV__EERRRR__IINNVVAALLIIDD__EEXXTTEENNSSIIOONN:: iinnvvaalliidd oorr iinnccoonnssiisstteenntt cceerrttiiffiiccaattee
       eexxtteennssiioonn
           A certificate extension had an invalid value (for example an incor-
           rect encoding) or some value inconsistent with other extensions.

       XX550099__VV__EERRRR__IINNVVAALLIIDD__PPOOLLIICCYY__EEXXTTEENNSSIIOONN:: iinnvvaalliidd oorr iinnccoonnssiisstteenntt cceerrttiiffii--
       ccaattee ppoolliiccyy eexxtteennssiioonn
           A certificate policies extension had an invalid value (for example
           an incorrect encoding) or some value inconsistent with other exten-
           sions. This error only occurs if policy processing is enabled.

       XX550099__VV__EERRRR__NNOO__EEXXPPLLIICCIITT__PPOOLLIICCYY:: nnoo eexxpplliicciitt ppoolliiccyy
           The verification flags were set to require and explicit policy but
           none was present.

       XX550099__VV__EERRRR__DDIIFFFFEERREENNTT__CCRRLL__SSCCOOPPEE:: DDiiffffeerreenntt CCRRLL ssccooppee
           The only CRLs that could be found did not match the scope of the
           certificate.

       XX550099__VV__EERRRR__UUNNSSUUPPPPOORRTTEEDD__EEXXTTEENNSSIIOONN__FFEEAATTUURREE:: UUnnssuuppppoorrtteedd eexxtteennssiioonn ffeeaattuurree
           Some feature of a certificate extension is not supported. Unused.

       XX550099__VV__EERRRR__PPEERRMMIITTTTEEDD__VVIIOOLLAATTIIOONN:: ppeerrmmiitttteedd ssuubbttrreeee vviioollaattiioonn
           A name constraint violation occured in the permitted subtrees.

       XX550099__VV__EERRRR__EEXXCCLLUUDDEEDD__VVIIOOLLAATTIIOONN:: eexxcclluuddeedd ssuubbttrreeee vviioollaattiioonn
           A name constraint violation occured in the excluded subtrees.

       XX550099__VV__EERRRR__SSUUBBTTRREEEE__MMIINNMMAAXX:: nnaammee ccoonnssttrraaiinnttss mmiinniimmuumm aanndd mmaaxxiimmuumm nnoott
       ssuuppppoorrtteedd
           A certificate name constraints extension included a minimum or max-
           imum field: this is not supported.

       XX550099__VV__EERRRR__UUNNSSUUPPPPOORRTTEEDD__CCOONNSSTTRRAAIINNTT__TTYYPPEE:: uunnssuuppppoorrtteedd nnaammee ccoonnssttrraaiinntt
       ttyyppee
           An unsupported name constraint type was encountered. OpenSSL cur-
           rently only supports directory name, DNS name, email and URI types.

       XX550099__VV__EERRRR__UUNNSSUUPPPPOORRTTEEDD__CCOONNSSTTRRAAIINNTT__SSYYNNTTAAXX:: uunnssuuppppoorrtteedd oorr iinnvvaalliidd nnaammee
       ccoonnssttrraaiinntt ssyynnttaaxx
           The format of the name constraint is not recognised: for example an
           email address format of a form not mentioned in RFC3280. This could
           be caused by a garbage extension or some new feature not currently
           supported.

       XX550099__VV__EERRRR__CCRRLL__PPAATTHH__VVAALLIIDDAATTIIOONN__EERRRROORR:: CCRRLL ppaatthh vvaalliiddaattiioonn eerrrroorr
           An error occured when attempting to verify the CRL path. This error
           can only happen if extended CRL checking is enabled.

       XX550099__VV__EERRRR__AAPPPPLLIICCAATTIIOONN__VVEERRIIFFIICCAATTIIOONN:: aapppplliiccaattiioonn vveerriiffiiccaattiioonn ffaaiilluurree
           an application specific error. This will never be returned unless
           explicitly set by an application.

NNOOTTEESS
       The above functions should be used instead of directly referencing the
       fields in the XX550099__VVEERRIIFFYY__CCTTXX structure.

       In versions of OpenSSL before 1.0 the current certificate returned by
       _X_5_0_9___S_T_O_R_E___C_T_X___g_e_t___c_u_r_r_e_n_t___c_e_r_t_(_) was never NNUULLLL. Applications should
       check the return value before printing out any debugging information
       relating to the current certificate.

       If an unrecognised error code is passed to _X_5_0_9___v_e_r_-
       _i_f_y___c_e_r_t___e_r_r_o_r___s_t_r_i_n_g_(_) the numerical value of the unknown code is
       returned in a static buffer. This is not thread safe but will never
       happen unless an invalid code is passed.

SSEEEE AALLSSOO
       _X_5_0_9___v_e_r_i_f_y___c_e_r_t(3)

HHIISSTTOORRYY
       TBA



1.0.0g                            2009-10-18       X509_STORE_CTX_get_error(3)
