GENPKEY(1)                          OpenSSL                         GENPKEY(1)



NNAAMMEE
       genpkey - generate a private key

SSYYNNOOPPSSIISS
       ooppeennssssll ggeennppkkeeyy [--oouutt ffiilleennaammee] [--oouuttffoorrmm PPEEMM||DDEERR] [--ppaassss aarrgg]
       [--cciipphheerr] [--eennggiinnee iidd] [--ppaarraammffiillee ffiillee] [--aallggoorriitthhmm aallgg] [--ppkkeeyyoopptt
       oopptt::vvaalluuee] [--ggeennppaarraamm] [--tteexxtt]

DDEESSCCRRIIPPTTIIOONN
       The ggeennppkkeeyy command generates a private key.

OOPPTTIIOONNSS
       --oouutt ffiilleennaammee
           the output filename. If this argument is not specified then stan-
           dard output is used.

       --oouuttffoorrmm DDEERR||PPEEMM
           This specifies the output format DER or PEM.

       --ppaassss aarrgg
           the output file password source. For more information about the
           format of aarrgg see the PPAASSSS PPHHRRAASSEE AARRGGUUMMEENNTTSS section in _o_p_e_n_s_s_l(1).

       --cciipphheerr
           This option encrypts the private key with the supplied cipher. Any
           algorithm name accepted by _E_V_P___g_e_t___c_i_p_h_e_r_b_y_n_a_m_e_(_) is acceptable
           such as ddeess33.

       --eennggiinnee iidd
           specifying an engine (by its unique iidd string) will cause ggeennppkkeeyy
           to attempt to obtain a functional reference to the specified
           engine, thus initialising it if needed. The engine will then be set
           as the default for all available algorithms. If used this option
           should precede all other options.

       --aallggoorriitthhmm aallgg
           public key algorithm to use such as RSA, DSA or DH. If used this
           option must precede any --ppkkeeyyoopptt options. The options --ppaarraammffiillee
           and --aallggoorriitthhmm are mutually exclusive.

       --ppkkeeyyoopptt oopptt::vvaalluuee
           set the public key algorithm option oopptt to vvaalluuee. The precise set
           of options supported depends on the public key algorithm used and
           its implementation. See KKEEYY GGEENNEERRAATTIIOONN OOPPTTIIOONNSS below for more
           details.

       --ggeennppaarraamm
           generate a set of parameters instead of a private key. If used this
           option must precede and --aallggoorriitthhmm, --ppaarraammffiillee or --ppkkeeyyoopptt options.

       --ppaarraammffiillee ffiilleennaammee
           Some public key algorithms generate a private key based on a set of
           parameters.  They can be supplied using this option. If this option
           is used the public key algorithm used is determined by the parame-
           ters. If used this option must precede and --ppkkeeyyoopptt options. The
           options --ppaarraammffiillee and --aallggoorriitthhmm are mutually exclusive.

       --tteexxtt
           Print an (unencrypted) text representation of private and public
           keys and parameters along with the PEM or DER structure.

KKEEYY GGEENNEERRAATTIIOONN OOPPTTIIOONNSS
       The options supported by each algorith and indeed each implementation
       of an algorithm can vary. The options for the OpenSSL implementations
       are detailed below.

RRSSAA KKEEYY GGEENNEERRAATTIIOONN OOPPTTIIOONNSS
       rrssaa__kkeeyyggeenn__bbiittss::nnuummbbiittss
           The number of bits in the generated key. If not specified 1024 is
           used.

       rrssaa__kkeeyyggeenn__ppuubbeexxpp::vvaalluuee
           The RSA public exponent value. This can be a large decimal or hexa-
           decimal value if preceded by 00xx. Default value is 65537.

DDSSAA PPAARRAAMMEETTEERR GGEENNEERRAATTIIOONN OOPPTTIIOONNSS
       ddssaa__ppaarraammggeenn__bbiittss::nnuummbbiittss
           The number of bits in the generated parameters. If not specified
           1024 is used.

DDHH PPAARRAAMMEETTEERR GGEENNEERRAATTIIOONN OOPPTTIIOONNSS
           ddhh__ppaarraammggeenn__pprriimmee__lleenn::nnuummbbiittss
               The number of bits in the prime parameter pp.

           ddhh__ppaarraammggeenn__ggeenneerraattoorr::vvaalluuee
               The value to use for the generator gg.

EECC PPAARRAAMMEETTEERR GGEENNEERRAATTIIOONN OOPPTTIIOONNSS
       eecc__ppaarraammggeenn__ccuurrvvee::ccuurrvvee
           the EC curve to use.

GGOOSSTT22000011 KKEEYY GGEENNEERRAATTIIOONN AANNDD PPAARRAAMMEETTEERR OOPPTTIIOONNSS
       Gost 2001 support is not enabled by default. To enable this algorithm,
       one should load the ccgost engine in the OpenSSL configuration file.
       See README.gost file in the engines/ccgost directiry of the source dis-
       tribution for more details.

       Use of a parameter file for the GOST R 34.10 algorithm is optional.
       Parameters can be specified during key generation directly as well as
       during generation of parameter file.

       ppaarraammsseett::nnaammee
           Specifies GOST R 34.10-2001 parameter set according to RFC 4357.
           Parameter set can be specified using abbreviated name, object short
           name or numeric OID. Following parameter sets are supported:

             paramset   OID               Usage
             A          1.2.643.2.2.35.1  Signature
             B          1.2.643.2.2.35.2  Signature
             C          1.2.643.2.2.35.3  Signature
             XA         1.2.643.2.2.36.0  Key exchange
             XB         1.2.643.2.2.36.1  Key exchange
             test       1.2.643.2.2.35.0  Test purposes

NNOOTTEESS
       The use of the genpkey program is encouraged over the algorithm spe-
       cific utilities because additional algorithm options and ENGINE pro-
       vided algorithms can be used.

EEXXAAMMPPLLEESS
       Generate an RSA private key using default parameters:

        openssl genpkey -algorithm RSA -out key.pem

       Encrypt output private key using 128 bit AES and the passphrase
       "hello":

        openssl genpkey -algorithm RSA -out key.pem -aes-128-cbc -pass pass:hello

       Generate a 2048 bit RSA key using 3 as the public exponent:

        openssl genpkey -algorithm RSA -out key.pem -pkeyopt rsa_keygen_bits:2048 \
                                                       -pkeyopt rsa_keygen_pubexp:3

       Generate 1024 bit DSA parameters:

        openssl genpkey -genparam -algorithm DSA -out dsap.pem \
                                                       -pkeyopt dsa_paramgen_bits:1024

       Generate DSA key from parameters:

        openssl genpkey -paramfile dsap.pem -out dsakey.pem

       Generate 1024 bit DH parameters:

        openssl genpkey -genparam -algorithm DH -out dhp.pem \
                                               -pkeyopt dh_paramgen_prime_len:1024

       Generate DH key from parameters:

        openssl genpkey -paramfile dhp.pem -out dhkey.pem



1.0.0g                            2009-04-10                        GENPKEY(1)
