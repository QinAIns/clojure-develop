TSGET(1)                            OpenSSL                           TSGET(1)



NNAAMMEE
       tsget - Time Stamping HTTP/HTTPS client

SSYYNNOOPPSSIISS
       ttssggeett --hh server_url [--ee extension] [--oo output] [--vv] [--dd] [--kk pri-
       vate_key.pem] [--pp key_password] [--cc client_cert.pem] [--CC CA_certs.pem]
       [--PP CA_path] [--rr file:file...]  [--gg EGD_socket] [request]...

DDEESSCCRRIIPPTTIIOONN
       The ttssggeett command can be used for sending a time stamp request, as
       specified in RRFFCC 33116611, to a time stamp server over HTTP or HTTPS and
       storing the time stamp response in a file. This tool cannot be used for
       creating the requests and verifying responses, you can use the OpenSSL
       _tt_ss((11)) command to do that. ttssggeett can send several requests to the server
       without closing the TCP connection if more than one requests are speci-
       fied on the command line.

       The tool sends the following HTTP request for each time stamp request:

               POST url HTTP/1.1
               User-Agent: OpenTSA tsget.pl/<version>
               Host: <host>:<port>
               Pragma: no-cache
               Content-Type: application/timestamp-query
               Accept: application/timestamp-reply
               Content-Length: length of body

               ...binary request specified by the user...

       ttssggeett expects a response of type application/timestamp-reply, which is
       written to a file without any interpretation.

OOPPTTIIOONNSS
       --hh server_url
           The URL of the HTTP/HTTPS server listening for time stamp requests.

       --ee extension
           If the --oo option is not given this argument specifies the extension
           of the output files. The base name of the output file will be the
           same as those of the input files. Default extension is '.tsr'.
           (Optional)

       --oo output
           This option can be specified only when just one request is sent to
           the server. The time stamp response will be written to the given
           output file. '-' means standard output. In case of multiple time
           stamp requests or the absence of this argument the names of the
           output files will be derived from the names of the input files and
           the default or specified extension argument. (Optional)

       --vv  The name of the currently processed request is printed on standard
           error. (Optional)

       --dd  Switches on verbose mode for the underlying ccuurrll library. You can
           see detailed debug messages for the connection. (Optional)

       --kk private_key.pem
           (HTTPS) In case of certificate-based client authentication over
           HTTPS <private_key.pem> must contain the private key of the user.
           The private key file can optionally be protected by a passphrase.
           The --cc option must also be specified. (Optional)

       --pp key_password
           (HTTPS) Specifies the passphrase for the private key specified by
           the --kk argument. If this option is omitted and the key is
           passphrase protected ttssggeett will ask for it. (Optional)

       --cc client_cert.pem
           (HTTPS) In case of certificate-based client authentication over
           HTTPS <client_cert.pem> must contain the X.509 certificate of the
           user.  The --kk option must also be specified. If this option is not
           specified no certificate-based client authentication will take
           place. (Optional)

       --CC CA_certs.pem
           (HTTPS) The trusted CA certificate store. The certificate chain of
           the peer's certificate must include one of the CA certificates
           specified in this file.  Either option --CC or option --PP must be
           given in case of HTTPS. (Optional)

       --PP CA_path
           (HTTPS) The path containing the trusted CA certificates to verify
           the peer's certificate. The directory must be prepared with the
           cc__rreehhaasshh OpenSSL utility. Either option --CC or option --PP must be
           given in case of HTTPS. (Optional)

       --rraanndd file:file...
           The files containing random data for seeding the random number gen-
           erator. Multiple files can be specified, the separator is ;; for
           MS-Windows, ,, for VMS and :: for all other platforms. (Optional)

       --gg EGD_socket
           The name of an EGD socket to get random data from. (Optional)

       [request]...
           List of files containing RRFFCC 33116611 DER-encoded time stamp requests.
           If no requests are specifed only one request will be sent to the
           server and it will be read from the standard input. (Optional)

EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS
       The TTSSGGEETT environment variable can optionally contain default argu-
       ments. The content of this variable is added to the list of command
       line arguments.

EEXXAAMMPPLLEESS
       The examples below presume that ffiillee11..ttssqq and ffiillee22..ttssqq contain valid
       time stamp requests, tsa.opentsa.org listens at port 8080 for HTTP
       requests and at port 8443 for HTTPS requests, the TSA service is avail-
       able at the /tsa absolute path.

       Get a time stamp response for file1.tsq over HTTP, output is written to
       file1.tsr:

         tsget -h http://tsa.opentsa.org:8080/tsa file1.tsq

       Get a time stamp response for file1.tsq and file2.tsq over HTTP showing
       progress, output is written to file1.reply and file2.reply respec-
       tively:

         tsget -h http://tsa.opentsa.org:8080/tsa -v -e .reply \
               file1.tsq file2.tsq

       Create a time stamp request, write it to file3.tsq, send it to the
       server and write the response to file3.tsr:

         openssl ts -query -data file3.txt -cert | tee file3.tsq \
               | tsget -h http://tsa.opentsa.org:8080/tsa \
               -o file3.tsr

       Get a time stamp response for file1.tsq over HTTPS without client
       authentication:

         tsget -h https://tsa.opentsa.org:8443/tsa \
               -C cacerts.pem file1.tsq

       Get a time stamp response for file1.tsq over HTTPS with certificate-
       based client authentication (it will ask for the passphrase if
       client_key.pem is protected):

         tsget -h https://tsa.opentsa.org:8443/tsa -C cacerts.pem \
               -k client_key.pem -c client_cert.pem file1.tsq

       You can shorten the previous command line if you make use of the TTSSGGEETT
       environment variable. The following commands do the same as the previ-
       ous example:

         TSGET='-h https://tsa.opentsa.org:8443/tsa -C cacerts.pem \
               -k client_key.pem -c client_cert.pem'
         export TSGET
         tsget file1.tsq

AAUUTTHHOORR
       Zoltan Glozik <zglozik@opentsa.org>, OpenTSA project
       (http://www.opentsa.org)

SSEEEE AALLSSOO
       _o_p_e_n_s_s_l(1), _t_s(1), _c_u_r_l(1), RRFFCC 33116611



1.0.0g                            2010-01-05                          TSGET(1)
